<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	 xmlns:jee="http://www.springframework.org/schema/jee"
	  xmlns:tx="http://www.springframework.org/schema/tx"
	  xmlns:aop = "http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
    	http://www.springframework.org/schema/jee
    	http://www.springframework.org/schema/jee/spring-jee.xsd
    	http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop 
   		http://www.springframework.org/schema/aop/spring-aop.xsd"
        >

	<!-- Step 3: Add support for component scanning -->
	<context:component-scan base-package="com.finance" />
	
	<aop:aspectj-autoproxy/>
	
	<tx:annotation-driven transaction-manager="hibernateTransactionManager"/>

	<!-- Step 4: Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>

	<!-- Step 5: Define Spring MVC view resolver -->
		<!-- property name="prefix" value="/WEB-INF/view" /-->
	<!-- bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean-->
	
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	  <property name="definitions">
	    <list>
	      <value>/WEB-INF/defs/template.xml</value>
	    </list>
	  </property>
	</bean>

	 <bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <property name="location">
	       <value>/WEB-INF/views.xml</value>
	   </property>
	   <property name="order" value="0" />
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	  <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    	<property name="basename" value="messages"/>
	</bean>
	
	
	
	<!-- Define JNDI entries -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/appDataSource"
        expected-type="javax.sql.DataSource" />
    

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.finance.entities.AppUser</value>
				<value>com.finance.entities.FolioHoldings</value>
				<value>com.finance.entities.FolioTransaction</value>
				<value>com.finance.entities.FundMaster</value>
				<value>com.finance.entities.FolioMaster</value>
				<value>com.finance.entities.FolioTransactionAudit</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	
	<bean id="hibernateTransactionManager"
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
</beans>